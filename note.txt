/ 或 ? 后 <C-f> 可以打开搜索历史

Ctrl + w, Shift + [hjkl]: 将当前缓冲区置于终端最[左/下/上/右]侧, 并占据整个窗口[高/宽]度

viwp 用拷贝的内容替换当前单词. "viw" 可视模式选中当前单词, "p" 粘贴

{n}K 默认打开光标处关键字的 man 手册, 相当于 :!man {n} 'keyword'

gi Insert text in the same position as where Insert mode was stopped last time in the current buffer

gv Start Visual mode with the same area as the previous area and the same mode

插入模式下 <C-O>, 可以执行一个普通模式命令然后回到插入模式

gx  使用浏览器打开光标处的 url

在命令模式下输入一个数字 n 然后 i 进入插入模式编辑文本, ESC 后编辑的内容会重复 n 次.
例如: 3i123 得到结果: 123123123

vim +n file 打开文件并跳转到第 n 行(对于根据错误行号排查问题尤为方便)

;   Repeat latest f, t, F or T [count] times.
,   Repeat latest f, t, F or T in opposite direction [count] times

:iabbrev 可以为单词指定一个缩写: 执行 ":iabbrev inc #include", 输入 inc 后将自动替换为 #include

在 set mouse=a 时, 鼠标右键不能复制文本, 此时可以按下 shift 键, 然后选择复制

注释块的方法:
    <C-V> 选定要注释掉的行I (//|#) Esc
    I 之后输入的东西就是插入到选定的行前边的,直至Esc.
    要去掉注释的办法:<C-V>选定注释符//,然后d
    列块选定后I 是在前边都插入,A 是在后边都插入
    <C-V>是按列块模式的选定,<shift-V>是行选定,v 是普通选定

guw 转换为小写
gUw 转换为大写
g~w 大小写互换

使用 vimdiff file1 file2 对比两个文件
]c 跳转到下一处差异
[c 跳转到上一处差异
dp 当前差异复制到另一个文件
do 从另一个文件复制当前差异
:diffupdate 若改动, 刷新差异结果 (通常自动刷新, 如果失败才使用该命令)

当设置了 :set hlsearch 时, 搜索后对应的内容一直保持高亮, 可能有时候这很不爽
这时可以输入 :nohl 来取消本次搜索的高亮, 且下次搜索时依然可以高亮的

ma：在当前光标的位置标记一个书签，名字为 a。书签名只能是小写字母.
`a：到书签 a 处。注意这个不是单引号，它一般位于大部分键盘的 1 的左边。
`.：到你上次编辑文件的地方。这个命令很有用，而且你不用自己去标记它。

"ayy 复制当前行到寄存器 a,
"ap  从寄存器 a 中粘贴. yy 只是示列, 其它比如 dw 也一样
"+   表示系统剪贴板, 使用 "+p 可以把剪贴板中的内容粘贴到光标处, 同理也可以复制内容到剪贴板
寄存器有很多, 要查看所有寄存器, 使用 :reg 命令

>>：缩进所有选择的代码
<<：和上面类似，但是反缩进
:12,24> 此命令将12 行到14 行的数据都向右移动一个tab.
:12,24>> 此命令将12 行到14 行的数据都向右移动两个tab.


D(大写) 剪切光标后整行内容
Y(大写) 复制当前行
C(大写) 剪切光标后整行内容并进入插入模式
cc 剪切整行内容并进入插入模式
s 删除当前字符并进入插入模式, 对应 x

<C-f> 向下移动一屏
<C-b> 向上移动一屏
b 向后移动一个词
f(F) 在本行中查找字符. 例如 f( 向后搜索字符 (, F 则是向前. 可以指定重复次数
t(T) 类似于 f(F), 只是在搜索到字符后光标停留在目标字符前(后)

num+| num 是数字, 把光标移动到当前行 num 指定的列
*(#) 向前(后)搜索当前光标下精确匹配的字符串

删除或替换 (" 等成对的符号, 例如
'hello,* world!' 修改为 "*hello, world!" 只需在 norm 模式下输入 cs'" 即可. 其中 * 表示当前光标位置
详细使用在 doc/surround.txt


-   移动到上一行的第一个非空白处
+   移动到下一行的第一个非空白处
(   向前移动一个句子
)   向后移动一个句子
{   向前移动一个段落
}   向后移动一个段落


:set path=path/to/dir/   然后在需要的文件名处按下
gf  打开相应的文件

z-c, z-o, z-r(R), z-m(M) 折叠
<C-X><C-O>或tab(SuperTab), ctrl-n, ctrl-p
ctags -R, :tags=tags
ctrl+w+h(j,k,l), 切换窗口
:qall 关闭所有窗口

:e 重新加载文件

正常模式下,光标在一个数字处:
<C-X> 递减该数字
<C-A> 递增该数字

shift+k : 查看 Linux Programmer's Manual
常用跳转方法
光标处Ctrl-]键：跳到光标所在单词的tag。
Ctrl-T键：跳回原来的位置。
g]键（先按g再按]）：如果有同名的多个tag，可以用这两个键进行跳转，会提示选择序号

生成omni自动补全C/C++的tags
ctags -R --c++-kinds=+p --fields=+iaS --extra=+q .<CR>
vimrc中map到<c-F12>

<C-e> 当前行上移
<C-y> 当前行下移
zz, zt, zb: 将光标所在行居中/置顶/置尾；
H, M, L: 定位光标到当前窗口的首/中/尾；

e - 从当前光标当前位置直到单词末尾，包括最后一个字符
U - 撤销对整行的修改

:s/old/new/g 替换当前行中的old为new
:%s/old/new/g 替换整个文件中的old为new
:#,#s/old/new/g 替换两个#(行号)行之间的old为new
没有g表示只替换找到的第一个
gc提示将要进行的替换

多文件查找:
    vimgrep /xxx/[g][j] file1 [file2 ...]
    :cn 下一个匹配位置
    :cp 上一个匹配位置
    :cw quickfix 窗口, 选择匹配位置
    :cl 查看所有匹配位置


A(大写) - 在本行的末尾插入
R(大写) - 连续替换文本

^ - 移动到本行的最前面但跳过空格(0是移动到行的最前面)

v - 键使 Vim 进入可视模式进行选取。接着您可以使用一个操作符对选中文本进行操作。
    例如，按 d 键会删除选中的文本内容。
V - 以行为单位
C-V 选择矩形
o 移动都选择区域的另一端
O 对于C-v模式移动到矩形的同一行的另一端

afap - 把一段文字折叠起来

daw 如果光标位于一个word的中间,而又想删除整个word时使用这个命令(aw - A Word)
类似的还有cis(inner sentence), cas(a sentence) caw dis das等

  2. :w FILENAME  可将当前 VIM 中正在编辑的文件保存到名为 FILENAME 的文
     件中。

  3. v motion :w FILENAME 可将当前编辑文件中可视模式下选中的内容保存到文件
     FILENAME 中。

  4. :r FILENAME 可提取磁盘文件 FILENAME 并将其插入到当前文件的光标位置
     后面。

  5. :r !dir 可以读取 dir 命令的输出并将其放置到当前文件的光标位置后面。
